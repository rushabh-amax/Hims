{
  "version": 3,
  "sources": ["../../../../../apps/hims/hims/public/js/customJs.bundle.js"],
  "sourcesContent": ["// function removePageTItles(){\n//   const  pageTitle = document.querySelector(\".page-title\");\n//     // Start observing changes in the body subtree\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n\n// }\n// document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\n\n// sliding active bar for ERPNext form tabs (no frappe.ready)\n\n\n\n// from-tab sliding effect\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'var(--_primary-bg-color)',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n\n\n\n\n\n\n// from-tab sliding effect\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'var(--_primary-bg-color)',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n\n//  login password\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const injectToggle = (input) => {\n//         // avoid duplicate injection\n//         if (input.parentNode.querySelector(\".toggle-password\")) return;\n\n//         let toggle = document.createElement(\"div\");\n//         toggle.classList.add(\"toggle-password\");\n//         toggle.innerHTML = `\n//             <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                 <use href=\"#icon-unhide\"></use>\n//             </svg>\n//         `;\n\n//         // style position relative so we can absolutely position the icon\n//         input.parentNode.style.position = \"relative\";\n//         toggle.style.position = \"absolute\";\n//         toggle.style.right = \"10px\";\n//         toggle.style.top = \"50%\";\n//         toggle.style.transform = \"translateY(-50%)\";\n//         toggle.style.cursor = \"pointer\";\n\n//         input.parentNode.appendChild(toggle);\n\n//         // toggle logic\n//         toggle.addEventListener(\"click\", () => {\n//             if (input.type === \"password\") {\n//                 input.type = \"text\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-hide\");\n//             } else {\n//                 input.type = \"password\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-unhide\");\n//             }\n//         });\n//     };\n\n//     // Initial injection\n//     document.querySelectorAll('input[type=\"password\"]').forEach(injectToggle);\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n// });\n\n\n//     // Initial injection\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n\n\n\n// // sidebar remvoe\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n\n    console.log(\"\u2705 Pure JS script started\");\n\n    const module_API_ROUTE = \"/api/method/hims.api.login_api.login_with_permissions\";\n\n    fetch(module_API_ROUTE, {\n        method: \"GET\",\n        credentials: \"include\",\n    })\n    .then(res => res.json())\n    .then(res => {\n        const modules = res.message?.modules || [];\n\n        if (!Array.isArray(modules) || modules.length === 0) {\n            console.log(\"\u26A0\uFE0F No modules data from API\");\n            return;\n        }\n\n        // Collect parent module routes like \"/accounting\"\n        const parentRoutes = modules.map(m => m.route?.replace(/^\\//, \"\")); \n        console.log(\"\u2705 Parent Module Routes:\", parentRoutes);\n\n        function getCurrentRoute() {\n              // remove leading slash, return full path after app/\n              const pathParts = window.location.pathname.split(\"/\").filter(Boolean);\n              if (pathParts[0] === \"app\") {\n                  return \"app/\" + pathParts.slice(1).join(\"/\");\n              }\n              return pathParts.join(\"/\");\n          }\n\n\n// function toggleSidebar() {\n//   const currentRoute = getCurrentRoute();\n//   console.log(\"\uD83D\uDC49 Current Route:\", currentRoute);\n//     console.log(\"inside fucntion\")\n\n//   const side = document.querySelector(\".layout-side-section\");\n//   console.log(side);\n\n//   if (parentRoutes.includes(currentRoute)) {\n//     if (side) side.style.display = \"none\";   // or: side.remove();\n//     console.log(\"\uD83D\uDED1 Sidebar hidden for parent route:\", currentRoute);\n//   } else {\n//     if (side) side.style.display = \"\";       // reset to default\n//     console.log(\"\u2705 Sidebar visible for child route:\", currentRoute);\n//   }\n//   console.log(\"after if else\")\n// }\n\n        // Run once\n        \nfunction toggleSidebar(currentRoute, parentRoutes = []) {\n    const side = document.querySelector(\".layout-side-section\");\n    console.log(\"\uD83D\uDC49 Sidebar element:\", side);\n    console.log(\"\uD83D\uDC49 Current Route:\", currentRoute);\n    console.log(\"\uD83D\uDC49 Parent Routes:\", parentRoutes);\n\n    if (!Array.isArray(parentRoutes)) {\n        console.warn(\"\u26A0\uFE0F parentRoutes is not an array, resetting to []\");\n        parentRoutes = [];\n    }\n\n    if (side) {\n        if (currentRoute && parentRoutes.includes(currentRoute)) {\n            // Hide sidebar\n            side.style.display = \"none\"; // or: side.remove();\n            console.log(\"\uD83D\uDED1 Sidebar hidden for parent route:\", currentRoute);\n        } else {\n            // Show sidebar again\n            side.style.display = \"\";\n            console.log(\"\u2705 Sidebar visible for child route:\", currentRoute);\n        }\n    } else {\n        console.log(\"\u26A0\uFE0F Sidebar element not found in DOM.\");\n    }\n\n    console.log(\"\u2705 after if-else\");\n}\n\n\n        // toggleSidebar();\ntoggleSidebar(currentRoute, parentRoutes);\n\n        // Listen for navigation changes\n        window.addEventListener(\"popstate\", toggleSidebar);\n        window.addEventListener(\"pushstate\", toggleSidebar);\n        window.addEventListener(\"hashchange\", toggleSidebar);\n    })\n    .catch(err => {\n        console.error(\"\u274C API fetch error:\", err);\n    });\n});\n"],
  "mappings": "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",
  "names": ["_a", "currentRoute", "parentRoutes"]
}
